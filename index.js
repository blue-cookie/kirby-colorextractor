(function(){"use strict";var p=function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("k-field",t._b({},"k-field",t.$attrs,!1),[t.count==0?e("k-list-item",{staticClass:"colorextractor-empty",attrs:{text:t.$t("colorextractor.button.text.empty"),icon:t.iconEmpty,element:"div"}}):e("k-list-item",{staticClass:"colorextractor-button",attrs:{text:t.$t("colorextractor.button.text"),icon:t.icon,element:"div"},on:{click:t.openDialog}}),e("k-dialog",{ref:"dialog",attrs:{theme:"negative"}},[!t.processing&&!t.completedCount?[e("k-text",{domProps:{innerHTML:t._s(t.$t("colorextractor.dialog.text",{count:t.count},t.count))}}),e("template",{slot:"footer"},[e("k-button-group",[e("k-button",{attrs:{icon:"cancel"},on:{click:function(i){return t.$refs.dialog.close()}}},[t._v(t._s(t.$t("cancel")))]),e("k-button",{attrs:{icon:"check",theme:"positive"},on:{click:t.processImages}},[t._v("Process")])],1)],1)]:!t.processing&&t.failed.length?[e("k-text",[t._v(" "+t._s(t.$t("colorextractor.dialog.text.error",{count:t.completedCount,failed:t.failed.length},t.completedCount))+" ")]),e("ul",{staticClass:"colorextractor-errors"},t._l(t.failed,function(i,c){return e("li",{staticClass:"error"},[e("strong",[t._v("Filename:")]),t._v(" "+t._s(i.name)+" "),e("div",{staticClass:"error-message"},[t._v(t._s(i.message))])])}),0),e("template",{slot:"footer"},[e("k-button-group",[e("k-button",{attrs:{icon:"cancel"},on:{click:function(i){return t.$refs.dialog.close()}}},[t._v(t._s(t.$t("close")))])],1)],1)]:t.processing?[e("k-headline",[t._v(t._s(t.$t("colorextractor.dialog.processing")))]),e("k-progress",{ref:"progress"}),e("ul",{staticClass:"k-upload-list"},[e("div",{staticClass:"colorextractor-progress-caption"},[e("p",{staticClass:"k-colextractor-counter"},[t._v(t._s(t.$t("colorextractor.dialog.extracted"))+": "+t._s(t.completedCount)+" / "+t._s(t.count))])])]),e("template",{slot:"footer"},[e("k-button-group",[e("k-button",{attrs:{icon:"cancel"},on:{click:t.abortExtraction}},[t._v(t._s(t.$t("cancel")))])],1)],1)]:t._e()],2)],1)},h=[],b="";function _(t,s,e,i,c,l,u,k){var o=typeof t=="function"?t.options:t;s&&(o.render=s,o.staticRenderFns=e,o._compiled=!0),i&&(o.functional=!0),l&&(o._scopeId="data-v-"+l);var n;if(u?(n=function(r){r=r||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,!r&&typeof __VUE_SSR_CONTEXT__!="undefined"&&(r=__VUE_SSR_CONTEXT__),c&&c.call(this,r),r&&r._registeredComponents&&r._registeredComponents.add(u)},o._ssrRegister=n):c&&(n=k?function(){c.call(this,(o.functional?this.parent:this).$root.$options.shadowRoot)}:c),n)if(o.functional){o._injectStyles=n;var C=o.render;o.render=function($,f){return n.call(f),C($,f)}}else{var d=o.beforeCreate;o.beforeCreate=d?[].concat(d,n):[n]}return{exports:t,options:o}}const m={data(){return{iconEmpty:{type:"check",back:"theme-empty"},icon:{type:"refresh",back:"theme-process"},processing:!1,completed:[],failed:[]}},props:{files:Array},computed:{count:function(){let t=this.files.length;return t=Object.is(t,void 0)?0:t,t},completedCount:function(){let t=this.completed.length;return t=Object.is(t,void 0)?0:t,t}},methods:{processImages(){this.resetArrays(),this.processing=!0,this.files.forEach((t,s)=>{this.$api.post("colorextractor/process-image",{id:t.id,index:s}).then(e=>{if(this.completed.push(t.name),this.completedCount==this.count)if(this.failed.length)this.failedExtraction();else{let i=this;setTimeout(()=>{i.completedExtraction()},250)}this.setProgress()}).catch(e=>{this.completed.push(t.name),this.failed.push({name:t.filename,message:e.message}),this.completedCount==this.count&&this.failedExtraction(),this.setProgress()})})},setProgress(){let t=this.completedCount/this.count*100;t=Math.max(0,Math.min(100,t)),this.$refs.progress.set(t)},completedExtraction(){let t=this.$t("colorextractor.notification.completed",{count:this.completedCount},this.completedCount);this.$refs.dialog.close(),this.$store.dispatch("notification/success",t),this.processing=!1,this.currentIndex=0,this.files={}},failedExtraction(){this.processing=!1,this.currentIndex=0,this.files=this.files.filter(t=>this.failed.filter(s=>s.name===t.filename).length)},openDialog(){this.resetArrays(),this.$refs.dialog.open()},abortExtraction(){this.$refs.dialog.close(),this.processing=!1},resetArrays(){this.completed=[],this.failed=[]}}},a={};var g=_(m,p,h,!1,v,null,null,null);function v(t){for(let s in a)this[s]=a[s]}var x=function(){return g.exports}();panel.plugin("sylvainjule/colorextractor",{fields:{colorextractor:x}})})();
